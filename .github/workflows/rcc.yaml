name: Rcc
on:
    workflow_dispatch:
        # enables manual triggering
    push:
      tags:
        - 'v[0-9]+.[0-9]+.[0-9]+'

jobs:
    build:
        name: Build
        runs-on: ubuntu-latest
        steps:
            - uses: actions/setup-go@v3
              with:
                  go-version: '1.20.x'
            - uses: ruby/setup-ruby@v1
              with:
                  ruby-version: '2.7'
            - uses: actions/checkout@v1

            - name: What
              run: rake what
            - name: Building
              run: |
                mkdir signed
                rake clean build
            - name: Sign Artifact with CodeSignTool
              uses: sslcom/esigner-codesign@develop
              with:
                command: sign
                username: "bipul@bluecopa.com"
                password: ${{ secrets.ESIGNER_PASSWORD }}
                credential_id: "1d3e2805-6cf4-4363-bc74-08271908842b"
                totp_secret: ${{ secrets.ESIGNER_TOTP_SECRET }}
                file_path: "build/windows64/rcc.exe"
                output_path: build/
                malware_block: false
                environment_name: PROD
            - name: Create GitHub Release
              uses: actions/create-release@v1
              env:
                GITHUB_TOKEN: ${{ secrets.GPAT }}
              with:
                tag_name: ${{ github.ref }}
                release_name: Release ${{ github.ref }}
                body: "Release of version ${{ github.ref }}"
                draft: false
                prerelease: false
            - name: Upload Artifact to Release
              uses: actions/upload-release-asset@v1
              env:
                GITHUB_TOKEN: ${{ secrets.GPAT }}
              with:
                upload_url: ${{ steps.create_release.outputs.upload_url }}
                asset_path: ./build/windows64/rcc.exe
                asset_name: rcc.exe
                asset_content_type: application/octet-stream
#    macos:
#        name: MacOs Code Signing
#        runs-on: macos-latest
#        needs:
#          - build
#        steps:
#          - name: Download Shared Directory
#            uses: actions/download-artifact@v2
#            with:
#              name: build-artifact
#          - name: Setup Keychain and Import Certificate
#            run: |
#              pwd
#              ls -ltr
#              echo "**********************************************************1"
#              security create-keychain -p "" build.keychain
#              echo "**********************************************************2"
#              security import codesign.key -k build.keychain -P "" -T /usr/bin/codesign
#              echo "**********************************************************3"
#              security import codesign.crt -k build.keychain -P "" -T /usr/bin/codesign
#              echo "**********************************************************4"
#              security list-keychains -s build.keychain
#              echo "**********************************************************5"
#              security unlock-keychain -p "" build.keychain
#              echo "**********************************************************6"
#              security set-key-partition-list -S apple-tool:,apple: -s -k "" build.keychain
#              echo "**********************************************************7"
#              security list-keychains
#              echo "**********************************************************8"
#              security find-certificate -c "Bluecopa" -p build.keychain
#              echo "**********************************************************9"
#              security find-identity -p codesigning -v build.keychain
#              echo "**********************************************************8"
#            shell: /bin/bash -e {0}
#
#          - name: Sign Executable
#            run: |
#              echo "**********************************************************1"
#              security dump-keychain /Users/runner/Library/Keychains/build.keychain-db
#              echo "**********************************************************2"
#              security find-identity -v /Users/runner/Library/Keychains/build.keychain-db
#              echo "**********************************************************3"
#              security show-keychain-info /Users/runner/Library/Keychains/build.keychain-db
#              echo "**********************************************************4"
#              security unlock-keychain -p asdf /Users/runner/Library/Keychains/build.keychain-db
#              echo "**********************************************************5"
#              security find-identity -p codesigning -v /Users/runner/Library/Keychains/build.keychain-db
#              echo "**********************************************************6"
#              security find-certificate -c "Bluecopa" -p /Users/runner/Library/Keychains/build.keychain-db | openssl x509 -inform pem -noout -subject
#              echo "**********************************************************7"
#              codesign --keychain /Users/runner/Library/Keychains/build.keychain-db -s "Bluecopa" -o runtime --timestamp macos64/rcc
#              echo "**********************************************************8"
#
#          - name: Archive Artifacts
#            uses: actions/upload-artifact@v2
#            with:
#              name: signed-executable
#              path: build-artifact
#
